# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
from algorithms.tree import is_symmetric as module_0


def test_case_0():
    none_type_0 = None
    var_0 = module_0.is_symmetric(none_type_0)
    assert var_0 is True
    var_1 = module_0.helper(none_type_0, var_0)
    assert var_1 is False


@pytest.mark.xfail(strict=True)
def test_case_1():
    str_0 = " Recursive Implementation "
    module_0.is_symmetric(str_0)


def test_case_2():
    none_type_0 = None
    bool_0 = True
    var_0 = module_0.helper(none_type_0, bool_0)
    assert var_0 is False


@pytest.mark.xfail(strict=True)
def test_case_3():
    float_0 = -106.21
    var_0 = module_0.helper(float_0, float_0)
    assert var_0 is False
    bool_0 = True
    module_0.is_symmetric_iterative(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    none_type_0 = None
    var_0 = module_0.is_symmetric_iterative(none_type_0)
    assert var_0 is True
    module_0.is_symmetric_iterative(var_0)


def test_case_5():
    none_type_0 = None
    var_0 = module_0.helper(none_type_0, none_type_0)
    assert var_0 is True
    var_1 = module_0.helper(none_type_0, var_0)
    assert var_1 is False
